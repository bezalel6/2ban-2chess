name: Build and Deploy to Coolify

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:headless || true

      - name: Build application
        run: npm run build

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger Coolify Deployment
        run: |
          echo "Triggering Coolify deployment webhook..."
          response=$(curl -X POST ${{ secrets.COOLIFY_WEBHOOK_URL }} \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_DEPLOY_TOKEN }}" \
            -d '{
              "image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}"
            }' \
            --max-time 30 \
            --connect-timeout 10 \
            -w "%{http_code}" \
            -s \
            -o /dev/null || echo "000")

          if [ "$response" = "000" ]; then
            echo "⚠️ Webhook timed out or failed to connect - deployment may still be processing"
            echo "Check Coolify dashboard for deployment status"
            exit 0
          elif [ "$response" -ge 200 ] && [ "$response" -lt 300 ]; then
            echo "✅ Webhook triggered successfully (HTTP $response)"
          else
            echo "❌ Webhook failed with HTTP $response"
            echo "Check webhook URL and authentication token"
            exit 1
          fi
