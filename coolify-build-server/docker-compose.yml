version: '3.8'

services:
  coolify-agent:
    image: coollabsio/coolify-agent:latest
    container_name: coolify-build-agent
    restart: unless-stopped
    environment:
      # Agent Configuration
      - COOLIFY_MODE=build
      - COOLIFY_AGENT_TYPE=build-server
      
      # Optional: Set if you have Coolify URL and token
      # - COOLIFY_URL=https://your-coolify-instance.com
      # - COOLIFY_TOKEN=your-api-token
      
      # Docker Configuration
      - DOCKER_HOST=unix:///var/run/docker.sock
      
      # Resource Limits
      - MAX_CONCURRENT_BUILDS=2
      - BUILD_TIMEOUT=3600
      
      # Logging
      - LOG_LEVEL=info
      
    volumes:
      # Docker socket for building images
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Persistent data storage
      - ./data:/data
      
      # Build cache
      - ./cache:/cache
      
      # Temporary build directory
      - ./tmp:/tmp
      
    ports:
      # Agent API port
      - "8000:8000"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '1.0'
          memory: 2G
          
    networks:
      - coolify-network
    
    # Add extra hosts for local development
    extra_hosts:
      - "host.docker.internal:host-gateway"
      
  # Optional: Monitoring with Prometheus node exporter
  node-exporter:
    image: prom/node-exporter:latest
    container_name: coolify-monitoring
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - coolify-network
    profiles:
      - monitoring

networks:
  coolify-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  data:
    driver: local
  cache:
    driver: local
  tmp:
    driver: local