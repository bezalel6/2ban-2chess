version: '3.8'

services:
  # Next.js Application from GHCR
  app:
    image: ghcr.io/bezalel6/2ban-2chess-app:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - HOSTNAME=0.0.0.0
      - PORT=3000
      # Production environment variables
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL:-wss://ws-chess.rndev.site}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      # Admin setup
      - ADMIN_EMAILS=${ADMIN_EMAILS}
    restart: unless-stopped
    depends_on:
      - websocket
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`chess.rndev.site`)"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  # WebSocket Server from GHCR
  websocket:
    image: ghcr.io/bezalel6/2ban-2chess-websocket:latest
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - WS_PORT=3001
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - DATABASE_URL=${DATABASE_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://chess.rndev.site}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL:-wss://ws-chess.rndev.site}
      # Admin setup
      - ADMIN_EMAILS=${ADMIN_EMAILS}
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.websocket.rule=Host(`ws-chess.rndev.site`)"
      - "traefik.http.routers.websocket.tls=true"
      - "traefik.http.services.websocket.loadbalancer.server.port=3001"

  # Redis - OPTIONAL (uncomment if not using external Redis)
  # NOTE: If deploying to Coolify or using external Redis, comment out this entire service
  # and set REDIS_URL environment variable to your external Redis URL
  #
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   command: redis-server --appendonly yes
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  app-network:
    driver: bridge

# Volumes - only needed if using local Redis
# volumes:
#   redis-data: