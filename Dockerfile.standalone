# Multi-stage build for optimized Next.js standalone deployment
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Copy prisma schema for generation
COPY prisma ./prisma

# Install all dependencies (including devDependencies for build)
RUN npm ci

# Generate Prisma client - CRITICAL for production
RUN npx prisma generate

# Copy all source code
COPY . .

# Build the Next.js application
# This creates the standalone output in .next/standalone
RUN npm run build

# Production stage
FROM node:20-alpine AS runner

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Copy standalone build from builder
# The standalone folder contains everything needed to run
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Copy Prisma schema and generated client
# The generated client needs to be available at runtime
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/.prisma ./node_modules/.prisma
COPY --from=builder --chown=nextjs:nodejs /app/node_modules/@prisma ./node_modules/@prisma
COPY --from=builder --chown=nextjs:nodejs /app/prisma ./prisma

# Set environment to production
ENV NODE_ENV=production

# Create entrypoint script for migrations
USER root
RUN echo '#!/bin/sh' > /app/entrypoint.sh && \
    echo 'set -e' >> /app/entrypoint.sh && \
    echo '' >> /app/entrypoint.sh && \
    echo 'echo "Running database migrations..."' >> /app/entrypoint.sh && \
    echo 'npx prisma db push --skip-generate || echo "Migration failed, but continuing..."' >> /app/entrypoint.sh && \
    echo 'echo "Starting application..."' >> /app/entrypoint.sh && \
    echo 'exec node server.js' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh && \
    chown nextjs:nodejs /app/entrypoint.sh

# Install prisma CLI for migrations (lightweight)
RUN npm install -g prisma

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Start with entrypoint that runs migrations first
CMD ["/app/entrypoint.sh"]