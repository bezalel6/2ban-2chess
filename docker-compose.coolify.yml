# Coolify-optimized Docker Compose
# Redis is now managed externally by Coolify - set REDIS_URL environment variable
version: '3.8'

services:
  # Next.js Application (includes automatic database migrations on startup)
  app:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    ports:
      - "3000:3000"  # Expose to host for Cloudflare tunnel
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_WEBSOCKET_URL=wss://ws-chess.rndev.site
      - NEXT_PUBLIC_API_URL=https://chess.rndev.site
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_URL=https://chess.rndev.site
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    depends_on:
      - websocket
    networks:
      - coolify
    labels:
      # Coolify will auto-detect and configure these
      - coolify.managed=true
      - coolify.port=3000
      - coolify.domain=chess.rndev.site

  # WebSocket Server
  websocket:
    build:
      context: .
      dockerfile: Dockerfile.websocket
    ports:
      - "3001:3001"  # Expose to host for Cloudflare tunnel
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}  # Required for Prisma client
      - REDIS_URL=${REDIS_URL}  # Use external Redis URL from Coolify
      - ALLOWED_ORIGINS=https://chess.rndev.site
      - NEXTAUTH_URL=https://chess.rndev.site
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    networks:
      - coolify
    labels:
      - coolify.managed=true
      - coolify.port=3001
      - coolify.domain=ws-chess.rndev.site

networks:
  coolify:
    external: true